<?php

declare(strict_types=1);

namespace App\Providers;

use Carbon\CarbonImmutable;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\Relation;
use Illuminate\Http\Resources\Json\JsonResource;
use Illuminate\Support\Facades\Date;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\URL;
use Illuminate\Support\Facades\Vite;
use Illuminate\Support\ServiceProvider;

final class AppServiceProvider extends ServiceProvider
{
    /**
     * Register any application services.
     */
    public function register(): void
    {
        //
    }

    /**
     * Bootstrap any application services.
     */
    public function boot(): void
    {
        $this->configureCommands();
        $this->configureDates();
        $this->configureModels();
        $this->configureRelations();
        $this->configureResources();
        $this->configureUrl();
        $this->configureVite();
    }

    protected function configureCommands(): void
    {
        DB::prohibitDestructiveCommands(
            ! $this->app->environment(['local', 'testing', 'staging'])
        );
    }

    protected function configureDates(): void
    {
        Date::use(CarbonImmutable::class);
    }

    protected function configureModels(): void
    {
        Model::unguard();
        Model::shouldBeStrict();
    }

    protected function configureResources(): void
    {
        JsonResource::withoutWrapping();
    }

    protected function configureUrl(): void
    {
        if (! $this->app->environment('local')) {
            URL::forceScheme('https');
        }
    }

    protected function configureVite(): void
    {
        Vite::prefetch(concurrency: 3);
    }

    protected function configureRelations(): void
    {
        // @phpstan-ignore-next-line: array should have keys as string, but we put int because it works and we want to add ints as morphs
        //        Relation::enforceMorphMap([
        //            1 => Post::class,
        //            2 => Comment::class,
        //        ]);
    }
}
